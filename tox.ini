[tox]
envlist = copying,{py27,py33,py34,py35,py36}-{lint,tests,cli,checksetup}

[testenv]
whitelist_externals =
    cli:   {[testenv:cli]whitelist_externals}
deps=
    -rtests_utils/test-requirements.txt
    checksetup: {[testenv:checksetup]deps}
commands=
    tests:      {[testenv:tests]commands}
    lint:       {[testenv:lint]commands}
    cli:        {[testenv:cli]commands}
    checksetup: {[testenv:checksetup]commands}
    coverage:   {[testenv:coverage]commands}

[testenv:tests]
commands=
    py.test --cov=iotlabcli --cov-report=term --cov-report=xml --cov-report=html

[testenv:lint]
commands=
    python setup.py lint
    flake8

[testenv:copying]
whitelist_externals = /bin/bash
commands=
    bash tests_utils/check_license.sh

[testenv:cli]
whitelist_externals = /bin/bash
commands=
    bash -exc "for i in *-cli; do $i --help >/dev/null; done"
    bash -exc "for i in auth experiment node profile robot; \
    do iotlab-$i --help > /dev/null; done"

[testenv:checksetup]
deps =
    docutils
    readme-renderer
skip_install = True
usedevelop = False
commands =
    python setup.py check --strict --metadata --restructuredtext

[testenv:coverage]
passenv = CI TRAVIS TRAVIS_*
commands = codecov -e TOXENV

[testenv:integration]
# Use develop to get 'iotlabcli' coverage output
# Either it would be in .tox/integration/..../site-packages/
usedevelop=True
deps=
    -rtests_utils/test-requirements.txt
passenv = IOTLAB_TEST_PASSWORD
commands=
    pip install --upgrade -e.[secure]  # Install iotlabcli[secure] dependencies
    coverage run --source iotlabcli --omit='iotlabcli/tests/*' iotlabcli/integration/test_integration.py {posargs}
    coverage report
    coverage html
    coverage xml
